digraph IngressPipeImpl {
subgraph cluster {
graph [
label="", labeljust=r, style=bold];
0[label=__START__, margin="", shape=rectangle, style=solid];
1[label=__EXIT__, margin="", shape=rectangle, style=solid];
2[label="hdr.p2p_feedback.isValid();", margin="", shape=rectangle, style=solid];
3[label="hdr.mdn_int.isValid() && hdr.tcp.ack_control_flag == 1 && hdr.mdn_int.rate_control_event == 1;", margin="", shape=rectangle, style=solid];
4[label="hdr.mdn_int.rate_control_event = 1;", margin="", shape=rectangle, style=solid];
5[label="standard_metadata.egress_spec = 255;
local_metadata.flag_hdr.do_l3_l2 = 0;", margin="", shape=rectangle, style=solid];
6[label="hdr.packet_out.isValid();", margin="", shape=rectangle, style=solid];
7[label="standard_metadata.egress_spec = hdr.packet_out.egress_port;
hdr.packet_out.setInvalid();", margin="", shape=rectangle, style=solid];
8[label="hdr.packet_in.isValid() && standard_metadata.instance_type == 4;", margin="", shape=rectangle, style=solid];
9[label="local_metadata.flag_hdr.do_l3_l2 = 0;
...
mark_to_drop(standard_metadata);", margin="", shape=rectangle, style=solid];
10[label="init_pkt();
...
local_metadata.delay_info_hdr.path_delay_event_port = standard_metadata.ingress_port;", margin="", shape=rectangle, style=solid];
11[label="ingress_delay_processor_control_block_delay_for_this_pkt/delay_for_this_pkt >= ingress_delay_processor_control_block_last_updated_avg_delay/last_updated_avg_delay + 10000;", margin="", shape=rectangle, style=solid];
12[label="local_metadata.delay_info_hdr.path_delay_event_type = 1;
...
ingress_delay_processor_control_block_path_last_updated_delay_registers/path_last_updated_delay_registers.write(ingress_delay_processor_control_block_port_id/port_id, ingress_delay_processor_control_block_delay_for_this_pkt/delay_for_this_pkt);", margin="", shape=rectangle, style=solid];
13[label="ingress_delay_processor_control_block_delay_for_this_pkt/delay_for_this_pkt <= ingress_delay_processor_control_block_last_updated_avg_delay/last_updated_avg_delay + 281474976700656;", margin="", shape=rectangle, style=solid];
14[label="local_metadata.delay_info_hdr.path_delay_event_type = 2;
...
local_metadata.flag_hdr.is_control_pkt_from_delay_proc = 1;", margin="", shape=rectangle, style=solid];
15[label="IngressPipeImpl.ingress_rate_monitor_control_block.flow_type_based_ingress_stats_table", margin="", shape=ellipse, style=solid];
16[label="local_metadata.ingress_rate_event_hdr.ingress_traffic_color > 0;", margin="", shape=rectangle, style=solid];
17[label="local_metadata.flag_hdr.is_control_pkt_from_ing_queue_rate = 1;
local_metadata.ingress_rate_event_hdr.event_src_type = 1;", margin="", shape=rectangle, style=solid];
18[label="IngressPipeImpl.debug_std_meta_ingress_start.dbg_table", margin="", shape=ellipse, style=solid];
19[label="hdr.icmpv6.type == 135 && hdr.icmpv6.type == 135;", margin="", shape=rectangle, style=solid];
20[label="ndp_processing_control_block_ndp_reply_table/ndp_reply_table.apply().hit;", margin="", shape=rectangle, style=solid];
21[label="local_metadata.flag_hdr.do_l3_l2 = 0;
local_metadata.flag_hdr.is_pkt_toward_host = 1;", margin="", shape=rectangle, style=solid];
22[label="local_metadata.flag_hdr.do_l3_l2 = 1;", margin="", shape=rectangle, style=solid];
23[label="local_metadata.flag_hdr.do_l3_l2;", margin="", shape=rectangle, style=solid];
24[label="l2_ternary_processing_control_block_l2_ternary_table/l2_ternary_table.apply().hit;", margin="", shape=rectangle, style=solid];
25[label="my_station_processing_control_block_my_station_table/my_station_table.apply().hit;", margin="", shape=rectangle, style=solid];
26[label="local_metadata.flag_hdr.my_station_table_hit = 1;", margin="", shape=rectangle, style=solid];
27[label="local_metadata.flag_hdr.my_station_table_hit = 0;", margin="", shape=rectangle, style=solid];
28[label="hdr.ipv6.isValid() && local_metadata.flag_hdr.my_station_table_hit;", margin="", shape=rectangle, style=solid];
29[label="IngressPipeImpl.downstream_routing_control_clock.downstream_routing_table", margin="", shape=ellipse, style=solid];
30[label="local_metadata.flag_hdr.downstream_routing_table_hit;", margin="", shape=rectangle, style=solid];
31[label="local_metadata.flag_hdr.is_pkt_toward_host = 1;", margin="", shape=rectangle, style=solid];
32[label="hdr.ipv6.hop_limit == 0;", margin="", shape=rectangle, style=solid];
33[label="mark_to_drop(standard_metadata);", margin="", shape=rectangle, style=solid];
34[label="local_metadata.flag_hdr.is_pkt_toward_host = 0;
local_metadata.flag_hdr.found_multi_criteria_paths = 1;", margin="", shape=rectangle, style=solid];
35[label="IngressPipeImpl.cp_assisted_multicriteria_upstream_routing_control_block.delay_based_upstream_path_table", margin="", shape=ellipse, style=solid];
36[label="IngressPipeImpl.cp_assisted_multicriteria_upstream_routing_control_block.egr_queue_depth_based_upstream_path_table", margin="", shape=ellipse, style=solid];
37[label="local_metadata.egr_port_rate_value_range = 1;", margin="", shape=rectangle, style=solid];
38[label="IngressPipeImpl.cp_assisted_multicriteria_upstream_routing_control_block.egr_port_rate_based_upstream_path_table", margin="", shape=ellipse, style=solid];
39[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_lookup_flowlet_id_map_0/lookup_flowlet_id_map();", margin="", shape=rectangle, style=solid];
40[label="hdr.ipv6.traffic_class == 4;", margin="", shape=rectangle, style=solid];
41[label="local_metadata.flow_inter_packet_gap > 15000;", margin="", shape=rectangle, style=solid];
42[label="egress_queue_rate_value_map.read(cp_assisted_multicriteria_upstream_policy_routing_control_block_low_delay_path_rate_status/low_delay_path_rate_status, (bit<32>)local_metadata.delay_based_path);", margin="", shape=rectangle, style=solid];
43[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_low_delay_path_rate_status/low_delay_path_rate_status == 0;", margin="", shape=rectangle, style=solid];
44[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_use_low_delay_port_0/use_low_delay_port();", margin="", shape=rectangle, style=solid];
45[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_low_delay_path_rate_status/low_delay_path_rate_status == 1;", margin="", shape=rectangle, style=solid];
46[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_use_low_egress_queue_rate_port_0/use_low_egress_queue_rate_port();", margin="", shape=rectangle, style=solid];
47[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_low_delay_path_rate_status/low_delay_path_rate_status == 2;", margin="", shape=rectangle, style=solid];
48[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_use_low_egress_queue_depth_port_0/use_low_egress_queue_depth_port();", margin="", shape=rectangle, style=solid];
49[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_update_flowlet_id_0/update_flowlet_id_map();", margin="", shape=rectangle, style=solid];
50[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_use_old_port_0/use_old_port();
cp_assisted_multicriteria_upstream_policy_routing_control_block_update_flowlet_id_4/update_flowlet_id_map();", margin="", shape=rectangle, style=solid];
51[label="hdr.ipv6.traffic_class == 2;", margin="", shape=rectangle, style=solid];
52[label="local_metadata.flow_inter_packet_gap > 15000;", margin="", shape=rectangle, style=solid];
53[label="egress_queue_rate_value_map.read(cp_assisted_multicriteria_upstream_policy_routing_control_block_low_utilization_path_rate_status/low_utilization_path_rate_status, (bit<32>)local_metadata.egr_queue_based_path);", margin="", shape=rectangle, style=solid];
54[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_low_utilization_path_rate_status/low_utilization_path_rate_status == 0;", margin="", shape=rectangle, style=solid];
55[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_use_low_egress_queue_depth_port_2/use_low_egress_queue_depth_port();", margin="", shape=rectangle, style=solid];
56[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_low_utilization_path_rate_status/low_utilization_path_rate_status == 1;", margin="", shape=rectangle, style=solid];
57[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_use_low_egress_queue_rate_port_2/use_low_egress_queue_rate_port();", margin="", shape=rectangle, style=solid];
58[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_low_utilization_path_rate_status/low_utilization_path_rate_status == 2;", margin="", shape=rectangle, style=solid];
59[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_use_low_delay_port_2/use_low_delay_port();", margin="", shape=rectangle, style=solid];
60[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_update_flowlet_id_5/update_flowlet_id_map();", margin="", shape=rectangle, style=solid];
61[label="cp_assisted_multicriteria_upstream_policy_routing_control_block_use_old_port_2/use_old_port();
cp_assisted_multicriteria_upstream_policy_routing_control_block_update_flowlet_id_6/update_flowlet_id_map();", margin="", shape=rectangle, style=solid];
62[label="local_metadata.flag_hdr.found_egr_queue_depth_based_path = 0;
...
local_metadata.flag_hdr.found_path_delay_based_path = 0;", margin="", shape=rectangle, style=solid];
63[label="found_multi_criteria_paths_0/found_multi_criteria_paths = local_metadata.flag_hdr.found_multi_criteria_paths && (local_metadata.flag_hdr.found_egr_queue_depth_based_path || local_metadata.flag_hdr.found_egr_queue_rate_based_path || local_metadata.flag_hdr.found_path_delay_based_path);", margin="", shape=rectangle, style=solid];
64[label="!found_multi_criteria_paths_0/found_multi_criteria_paths;", margin="", shape=rectangle, style=solid];
65[label="local_metadata.temp_8_bit = 6;
upstream_ecmp_routing_control_block_lookup_flowlet_map_0/lookup_flowlet_map();", margin="", shape=rectangle, style=solid];
66[label="local_metadata.flow_inter_packet_gap > 15000;", margin="", shape=rectangle, style=solid];
67[label="upstream_ecmp_routing_control_block_update_flowlet_id_0/update_flowlet_id();", margin="", shape=rectangle, style=solid];
68[label="IngressPipeImpl.upstream_ecmp_routing_control_block.upstream_routing_table", margin="", shape=ellipse, style=solid];
69[label="IngressPipeImpl.ingress_end_debug.dbg_table", margin="", shape=ellipse, style=solid];
0 -> 2[label=""];
2 -> 3[label=TRUE];
2 -> 6[label=FALSE];
3 -> 4[label=TRUE];
3 -> 5[label=FALSE];
4 -> 18[label=""];
5 -> 1[label=""];
6 -> 7[label=TRUE];
6 -> 8[label=FALSE];
7 -> 1[label=""];
8 -> 9[label=TRUE];
8 -> 10[label=FALSE];
9 -> 18[label=""];
10 -> 11[label=""];
11 -> 12[label=TRUE];
11 -> 13[label=FALSE];
12 -> 15[label=""];
13 -> 14[label=TRUE];
13 -> 15[label=FALSE];
14 -> 15[label=""];
15 -> 16[label=""];
16 -> 17[label=TRUE];
16 -> 18[label=FALSE];
17 -> 18[label=""];
18 -> 19[label=""];
19 -> 20[label=TRUE];
19 -> 23[label=FALSE];
20 -> 21[label=TRUE];
20 -> 22[label=FALSE];
21 -> 1[label=""];
22 -> 1[label=""];
23 -> 24[label=TRUE];
23 -> 69[label=FALSE];
24 -> 1[label=TRUE];
24 -> 25[label=FALSE];
25 -> 26[label=TRUE];
25 -> 27[label=FALSE];
26 -> 28[label=""];
27 -> 28[label=""];
28 -> 29[label=TRUE];
28 -> 69[label=FALSE];
29 -> 30[label=""];
30 -> 31[label=TRUE];
30 -> 34[label=FALSE];
31 -> 32[label=""];
32 -> 33[label=TRUE];
32 -> 69[label=FALSE];
33 -> 69[label=""];
34 -> 35[label=""];
35 -> 36[label=""];
36 -> 37[label=""];
37 -> 38[label=""];
38 -> 39[label=""];
39 -> 40[label=""];
40 -> 41[label=TRUE];
40 -> 51[label=FALSE];
41 -> 42[label=TRUE];
41 -> 50[label=FALSE];
42 -> 43[label=""];
43 -> 44[label=TRUE];
43 -> 45[label=FALSE];
44 -> 49[label=""];
45 -> 46[label=TRUE];
45 -> 47[label=FALSE];
46 -> 49[label=""];
47 -> 48[label=TRUE];
47 -> 49[label=FALSE];
48 -> 49[label=""];
49 -> 63[label=""];
50 -> 63[label=""];
51 -> 52[label=TRUE];
51 -> 62[label=FALSE];
52 -> 53[label=TRUE];
52 -> 61[label=FALSE];
53 -> 54[label=""];
54 -> 55[label=TRUE];
54 -> 56[label=FALSE];
55 -> 60[label=""];
56 -> 57[label=TRUE];
56 -> 58[label=FALSE];
57 -> 60[label=""];
58 -> 59[label=TRUE];
58 -> 60[label=FALSE];
59 -> 60[label=""];
60 -> 63[label=""];
61 -> 63[label=""];
62 -> 63[label=""];
63 -> 64[label=""];
64 -> 65[label=TRUE];
64 -> 69[label=FALSE];
65 -> 66[label=""];
66 -> 67[label=TRUE];
66 -> 68[label=FALSE];
67 -> 68[label=""];
68 -> 69[label=""];
69 -> 1[label=""];
}
}
