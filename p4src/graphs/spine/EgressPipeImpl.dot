digraph EgressPipeImpl {
subgraph cluster {
graph [
label="", labeljust=r, style=bold];
0[label=__START__, margin="", shape=rectangle, style=solid];
1[label=__EXIT__, margin="", shape=rectangle, style=solid];
2[label="standard_metadata.instance_type == 0;", margin="", shape=rectangle, style=solid];
3[label="egress_queue_depth_monitor_control_block_port_last_updated_egress_queue_avg_depth/port_last_updated_egress_queue_avg_depth.read(egress_queue_depth_monitor_control_block_last_updated_deq_depth/last_updated_deq_depth, (bit<32>)standard_metadata.egress_spec);
local_metadata.egress_queue_event_hdr.egress_queue_event_port = standard_metadata.egress_port;", margin="", shape=rectangle, style=solid];
4[label="standard_metadata.deq_qdepth >= egress_queue_depth_monitor_control_block_last_updated_deq_depth/last_updated_deq_depth + 2;", margin="", shape=rectangle, style=solid];
5[label="local_metadata.egress_queue_event_hdr.event_src_type = 1;
...
local_metadata.flag_hdr.is_control_pkt_from_egr_queue_depth = 1;", margin="", shape=rectangle, style=solid];
6[label="standard_metadata.deq_qdepth < egress_queue_depth_monitor_control_block_last_updated_deq_depth/last_updated_deq_depth + 524286;", margin="", shape=rectangle, style=solid];
7[label="local_metadata.egress_queue_event_hdr.event_src_type = 1;
...
local_metadata.flag_hdr.is_control_pkt_from_egr_queue_depth = 1;", margin="", shape=rectangle, style=solid];
8[label="local_metadata.egress_queue_event_hdr.egress_queue_event = 10;
local_metadata.flag_hdr.is_control_pkt_from_egr_queue_depth = 0;", margin="", shape=rectangle, style=solid];
9[label="EgressPipeImpl.egress_rate_monitor_control_block.egress_rate_monitor_table", margin="", shape=ellipse, style=solid];
10[label="local_metadata.egress_rate_event_hdr.egress_traffic_color != local_metadata.temp;", margin="", shape=rectangle, style=solid];
11[label="local_metadata.flag_hdr.is_control_pkt_from_egr_queue_rate = 1;
...
local_metadata.egress_rate_event_hdr.egress_rate_event_data = 21;", margin="", shape=rectangle, style=solid];
12[label="local_metadata.is_multicast;", margin="", shape=rectangle, style=solid];
13[label="local_metadata.flag_hdr.is_control_pkt_from_egr_queue_depth || local_metadata.flag_hdr.is_control_pkt_from_egr_queue_rate;", margin="", shape=rectangle, style=solid];
14[label="clone3<list<standard_metadata_t, local_metadata_t>>(CloneType.E2E, (bit<32>)standard_metadata.ingress_port + 512, {standard_metadata, local_metadata});", margin="", shape=rectangle, style=solid];
15[label="local_metadata.flag_hdr.is_control_pkt_from_egr_queue_depth;", margin="", shape=rectangle, style=solid];
16[label="clone3<list<standard_metadata_t, local_metadata_t>>(CloneType.E2E, 255, {standard_metadata, local_metadata});", margin="", shape=rectangle, style=solid];
17[label="standard_metadata.instance_type != 0;", margin="", shape=rectangle, style=solid];
18[label="standard_metadata.egress_port == 0;", margin="", shape=rectangle, style=solid];
19[label="set_all_header_invalid();
...
recirculate<parsed_headers_t>(hdr);", margin="", shape=rectangle, style=solid];
20[label="standard_metadata.egress_port == 255;", margin="", shape=rectangle, style=solid];
21[label="set_all_header_invalid_2/set_all_header_invalid();
...
hdr.packet_in.egress_rate_event_port = local_metadata.egress_rate_event_hdr.egress_rate_event_port;", margin="", shape=rectangle, style=solid];
22[label="p2pFeedbackCounter.count((bit<32>)standard_metadata.egress_port);", margin="", shape=rectangle, style=solid];
0 -> 2[label=""];
2 -> 3[label=TRUE];
2 -> 17[label=FALSE];
3 -> 4[label=""];
4 -> 5[label=TRUE];
4 -> 6[label=FALSE];
5 -> 9[label=""];
6 -> 7[label=TRUE];
6 -> 8[label=FALSE];
7 -> 9[label=""];
8 -> 9[label=""];
9 -> 10[label=""];
10 -> 11[label=TRUE];
10 -> 12[label=FALSE];
11 -> 12[label=""];
12 -> 1[label=TRUE];
12 -> 13[label=FALSE];
13 -> 14[label=TRUE];
13 -> 15[label=FALSE];
14 -> 17[label=""];
15 -> 16[label=TRUE];
15 -> 17[label=FALSE];
16 -> 17[label=""];
17 -> 18[label=TRUE];
17 -> 1[label=FALSE];
18 -> 19[label=TRUE];
18 -> 20[label=FALSE];
19 -> 1[label=""];
20 -> 21[label=TRUE];
20 -> 22[label=FALSE];
21 -> 1[label=""];
22 -> 1[label=""];
}
}
